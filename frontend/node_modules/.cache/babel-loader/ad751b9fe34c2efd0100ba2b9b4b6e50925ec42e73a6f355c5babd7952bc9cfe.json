{"ast":null,"code":"var _jsxFileName = \"/Users/hilarifan/plant/frontend/src/components/LoginForm/LoginForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './LoginForm.css';\nimport { Link } from 'react-router-dom';\nimport validator from 'validator';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Form() {\n  _s();\n  // States for registration\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  // States for checking the errors\n  const [submitted, setSubmitted] = useState(false);\n  const [error, setError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  // Handling the name change\n  const handleUsername = e => {\n    setUsername(e.target.value);\n    setSubmitted(false);\n  };\n  const handlePassword = e => {\n    setPassword(e.target.value);\n    setSubmitted(false);\n  };\n\n  // Handling the form submission\n  // use api call to setError, and setSubmitted\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (username === '' || password === '') {\n      setError(true);\n      setErrorMessage('Please fill in all the fields');\n    } else {\n      const response = await fetch(\"http://localhost:8080/login\", {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      // r_json = response.json();\n      r_json = '{\"error\":true, \"errorMessage\":\"choose a different username\"}';\n      // console.log(r_json);\n      const obj = JSON.parse(r_json);\n      if (obj.error == true) {\n        setError(true);\n        setErrorMessage(obj.errorMessage);\n      } else {\n        setError(false);\n        setSubmitted(true);\n      }\n    }\n  };\n\n  // Showing success message\n  const successMessage = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success\",\n      style: {\n        display: submitted ? '' : 'none'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Yay! successful login!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  };\n\n  // Showing error message if error is true\n  const handleErrorMessage = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      style: {\n        display: error ? '' : 'none'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"form-header\",\n      children: \"login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: [\" \", handleErrorMessage()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleUsername,\n          className: \"input\",\n          value: username,\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handlePassword,\n          className: \"input\",\n          value: password,\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"link-container\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: '/signup',\n          className: \"signup-link\",\n          children: \"don't have an account?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        className: \"btn\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n_s(Form, \"sCjzLjz5ZtnwzcwVdxfhscD2yKA=\");\n_c = Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useState","Link","validator","axios","Form","username","setUsername","password","setPassword","submitted","setSubmitted","error","setError","errorMessage","setErrorMessage","handleUsername","e","target","value","handlePassword","handleSubmit","preventDefault","response","fetch","method","headers","r_json","obj","JSON","parse","successMessage","display","handleErrorMessage"],"sources":["/Users/hilarifan/plant/frontend/src/components/LoginForm/LoginForm.js"],"sourcesContent":["import { useState } from 'react';\nimport './LoginForm.css';\nimport { Link } from 'react-router-dom';\nimport validator from 'validator';\nimport axios from \"axios\";\n \nexport default function Form() {\n\n    // States for registration\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    // States for checking the errors\n    const [submitted, setSubmitted] = useState(false);\n    const [error, setError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n\n    // Handling the name change\n    const handleUsername = (e) => {\n        setUsername(e.target.value);\n        setSubmitted(false);\n    };\n    const handlePassword = (e) => {\n        setPassword(e.target.value);\n        setSubmitted(false);\n    };\n\n    // Handling the form submission\n    // use api call to setError, and setSubmitted\n    const handleSubmit = async(e) => {\n        e.preventDefault();\n\n        if (username === '' || password === '') {\n            setError(true);\n            setErrorMessage('Please fill in all the fields');\n        }\n        else {\n            const response = await fetch(\"http://localhost:8080/login\", {\n                method: 'GET',\n                headers: { 'Content-Type': 'application/json'}\n            });\n            // r_json = response.json();\n            r_json = '{\"error\":true, \"errorMessage\":\"choose a different username\"}';\n            // console.log(r_json);\n            const obj = JSON.parse(r_json);\n\n            if (obj.error == true) {\n                setError(true);\n                setErrorMessage(obj.errorMessage);\n            }\n            else {\n                setError(false);\n                setSubmitted(true);\n            }\n        }\n    };\n\n    // Showing success message\n    const successMessage = () => {\n        return (\n            <div className=\"success\" style={{display: submitted ? '' : 'none'}}>\n                <h1>Yay! successful login!</h1>\n            </div>\n        );\n    };\n\n    // Showing error message if error is true\n    const handleErrorMessage = () => {\n        return (\n            <div className=\"error\" style={{display: error ? '' : 'none'}}>\n                <h1>{errorMessage}</h1>\n            </div>\n        );\n    };\n\n    return (\n        <div className=\"form\">\n            <h1 className=\"form-header\">login</h1>\n\n            {/* <div className=\"messages\"> {errorMessage()} {successMessage()} </div> */}\n            <div className=\"messages\"> {handleErrorMessage()}</div>\n            \n            <form>\n                {/* Labels and inputs for form data */}\n                <div className=\"input-container\">\n                    <label className=\"label\">username</label>\n                    <input onChange={handleUsername} className=\"input\" value={username} type=\"text\" />\n                </div>\n\n                <div className=\"input-container\">\n                    <label className=\"label\">password</label>\n                    <input onChange={handlePassword} className=\"input\" value={password} type=\"password\" />\n                </div>\n                <div className=\"link-container\">\n                    <Link to={'/signup'} className=\"signup-link\">don't have an account?</Link>  \n                </div>                \n                <button onClick={handleSubmit} className=\"btn\" type=\"submit\">Submit</button>\n            </form>\n        </div>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}